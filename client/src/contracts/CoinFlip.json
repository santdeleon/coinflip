{
  "contractName": "CoinFlip",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "queryId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "BetFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "queryId",
          "type": "bytes32"
        }
      ],
      "name": "BetFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "queryId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BetLost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "queryId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BetPlaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "queryId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BetWon",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "funder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ContractFunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "LogNewProvableQuery",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_queryId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "bet",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "bets",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "player",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "betWon",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isPending",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "playerBetCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "playerToBet",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "player",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "betWon",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isPending",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "random",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "update",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "fundContract",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"queryId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"BetFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"queryId\",\"type\":\"bytes32\"}],\"name\":\"BetFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"queryId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BetLost\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"queryId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BetPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"queryId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BetWon\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ContractFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"LogNewProvableQuery\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"bet\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bets\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"betWon\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPending\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"fundContract\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"playerBetCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"playerToBet\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"betWon\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPending\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"random\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"update\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"__callback(bytes32,string)\":{\"details\":\"The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/Sant/Desktop/code/projects/blockchain/ivanontechacademy/coinflip/contracts/CoinFlip.sol\":\"CoinFlip\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/Sant/Desktop/code/projects/blockchain/ivanontechacademy/coinflip/contracts/Betting.sol\":{\"keccak256\":\"0x062917ce07ae80a838f352825de76d8c06bbca8f7fb148a0818a91e2e9288e72\",\"urls\":[\"bzz-raw://c47cea9d2a1b8965fe70bc224014cbfc1394a033a9e0fad92e2d3701c444eda6\",\"dweb:/ipfs/QmPbTdVZKJ5B9D4Pa63VYbWCXm2YxAtWBssHRmisw4uhFt\"]},\"/Users/Sant/Desktop/code/projects/blockchain/ivanontechacademy/coinflip/contracts/CoinFlip.sol\":{\"keccak256\":\"0x14fa264e58f7ed8e2dcb52989656bd0292390deb6bfdb3c6867b0d81062234c9\",\"urls\":[\"bzz-raw://ab9e643fc31b5b351ea4f732e9797241fff8164c3cde846f68c25266f39f7351\",\"dweb:/ipfs/QmZZ2uVFbiprF9hUwnP55DTGsCp6F2TveE5tHx1ejZ7yvC\"]},\"/Users/Sant/Desktop/code/projects/blockchain/ivanontechacademy/coinflip/contracts/Ownable.sol\":{\"keccak256\":\"0xbb172f67053919466011b0a2d3456ed0a3ca87eb4d82fd6dd886a5a1d05215e0\",\"urls\":[\"bzz-raw://8dba671b77d63c8cfc312ad69e9daacaa6e0ccbb59ae9a080bd4f4c3449466e2\",\"dweb:/ipfs/QmVcR1FnNcxHx5Noj5hSMMDxeQF1SX8fEJXaLjU14s6Yhh\"]},\"/Users/Sant/Desktop/code/projects/blockchain/ivanontechacademy/coinflip/contracts/provableAPI.sol\":{\"keccak256\":\"0x599540b4da2f005e736061a25f83b8effa219b94be0d55a7629cbe29c2710fc9\",\"urls\":[\"bzz-raw://de94881c9ab43ee790753e4ad8efe6629b9ac7c216f823f9249512916973b4bb\",\"dweb:/ipfs/QmSbfYsZZpQbrsHWfNyCFXajGW5t2PAxhUmCXPPpntpemN\"]},\"/Users/Sant/Desktop/code/projects/blockchain/ivanontechacademy/coinflip/contracts/usingModifiers.sol\":{\"keccak256\":\"0x8b4d111b3e936a96b32377c6e12d093c69468a41fec3147869dec348544186e6\",\"urls\":[\"bzz-raw://6b04a07fe36791f5c267ff85ca878c778e5cd08f087e16f3e5fd35d43efc4e0c\",\"dweb:/ipfs/QmRHr6RhTE5Vs6tm73U2xPY6dx6ce32jwfg5XvTiz3gjw3\"]},\"/Users/Sant/Desktop/code/projects/blockchain/ivanontechacademy/coinflip/contracts/usingPseudoRandomNumber.sol\":{\"keccak256\":\"0x610b516e4c0a208ffc31be58bf332adb60b3efb42e71286b59bedffa9111e250\",\"urls\":[\"bzz-raw://fdd8144a27c09f96481fdf216dd433881940b781a1ebcc674162718cf4b27e14\",\"dweb:/ipfs/QmXRpEbKJW69pKw7SDEo75vRn5YDhgrHsoUKDLhrTHZaDy\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c8063853828b61161008a578063a2e6204511610059578063a2e620451461063a578063a95783b514610658578063bd097e21146106bd578063f2fde38b146106c7576100e8565b8063853828b614610510578063893d20e8146105275780638da5cb5b14610585578063958f85bd146105dc576100e8565b80632e1a7d4d116100c65780632e1a7d4d1461031357806338bbfa501461034e5780635ec01e4d146104b75780637365870b146104e2576100e8565b806310d8065c146100ed57806322af00fa146101a257806327dc297e14610241575b600080fd5b3480156100f957600080fd5b5061013c6004803603602081101561011057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610718565b604051808681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183151515158152602001821515151581526020019550505050505060405180910390f35b3480156101ae57600080fd5b506101db600480360360208110156101c557600080fd5b8101908080359060200190929190505050610788565b604051808681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183151515158152602001821515151581526020019550505050505060405180910390f35b34801561024d57600080fd5b506103116004803603604081101561026457600080fd5b81019080803590602001909291908035906020019064010000000081111561028b57600080fd5b82018360208201111561029d57600080fd5b803590602001918460018302840111640100000000831117156102bf57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610805565b005b34801561031f57600080fd5b5061034c6004803603602081101561033657600080fd5b8101908080359060200190929190505050610848565b005b34801561035a57600080fd5b506104b56004803603606081101561037157600080fd5b81019080803590602001909291908035906020019064010000000081111561039857600080fd5b8201836020820111156103aa57600080fd5b803590602001918460018302840111640100000000831117156103cc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561042f57600080fd5b82018360208201111561044157600080fd5b8035906020019184600183028401116401000000008311171561046357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610a61565b005b3480156104c357600080fd5b506104cc610bda565b6040518082815260200191505060405180910390f35b61050e600480360360208110156104f857600080fd5b8101908080359060200190929190505050610bec565b005b34801561051c57600080fd5b50610525611024565b005b34801561053357600080fd5b5061053c6111c7565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b34801561059157600080fd5b5061059a611230565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105e857600080fd5b506105f1611255565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b610642611279565b6040518082815260200191505060405180910390f35b34801561066457600080fd5b506106a76004803603602081101561067b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112ec565b6040518082815260200191505060405180910390f35b6106c5611304565b005b3480156106d357600080fd5b50610716600480360360208110156106ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113e5565b005b60076020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900460ff16905085565b6006818154811061079557fe5b90600052602060002090600402016000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900460ff16905085565b610844828260006040519080825280601f01601f19166020018201604052801561083e5781602001600182028038833980820191505090505b50610a61565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806143f6602e913960400191505060405180910390fd5b3081808273ffffffffffffffffffffffffffffffffffffffff1631101561095f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806144246035913960400191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109b557fe5b60003073ffffffffffffffffffffffffffffffffffffffff163190506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc859081150290604051600060405180830381858888f19350505050158015610a38573d6000803e3d6000fd5b508381033073ffffffffffffffffffffffffffffffffffffffff163114610a5b57fe5b50505050565b610a69611507565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610aa057600080fd5b6000610aad848484611827565b60ff1614610b0d577f81816b50aae098d98a0f7930cfef379261913e37ed33759052b5eff95fbb8d5f83604051808281526020018060200182810382526021815260200180614480602191396040019250505060405180910390a1610bd5565b60006001806101000a039050600081846040516020018082805190602001908083835b60208310610b535780518252602082019150602081019050602083039250610b30565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c81610b9857fe5b0690507ff3421c93854709397d0d2db783688451d8b0cce5121d0580b704b45a32e9240d856040518082815260200191505060405180910390a150505b505050565b600060024281610be657fe5b06905090565b662386f26fc1000080341015610c4d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806144596027913960400191505060405180910390fd5b674563918244f40000341115610cae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806144a16021913960400191505060405180910390fd5b3382808273ffffffffffffffffffffffffffffffffffffffff16311015610d20576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806144246035913960400191505060405180910390fd5b3084808273ffffffffffffffffffffffffffffffffffffffff16311015610d92576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806144246035913960400191505060405180910390fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086816002018190555060018160030160016101000a81548160ff0219169083151502179055506001600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506000610e96611279565b905080826000018190555060068290806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600282015481600201556003820160009054906101000a900460ff168160030160006101000a81548160ff0219169083151502179055506003820160019054906101000a900460ff168160030160016101000a81548160ff0219169083151502179055505050507fcd5f79909b53eb4c55b0a2d7004914519bad1e3ade1b3dae6005d528d83da31e81338a604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806143f6602e913960400191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461111f57fe5b60003073ffffffffffffffffffffffffffffffffffffffff163190506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156111a2573d6000803e3d6000fd5b5060003073ffffffffffffffffffffffffffffffffffffffff1631146111c457fe5b50565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631819150915091509091565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080303073ffffffffffffffffffffffffffffffffffffffff1631915091509091565b60008060009050600062030d409050600061129683600184611957565b90507fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c473896040518080602001828103825260368152602001806145026036913960400191505060405180910390a180935050505090565b60086020528060005260406000206000915090505481565b3334808273ffffffffffffffffffffffffffffffffffffffff16311015611376576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806144246035913960400191505060405180910390fd5b7f0939f6f4877faf071412e527bc4c6d0bd65ad077e52b57334f7765265647a7f13334604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461148a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806143f6602e913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156114c457600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061158f5750600061158d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611ef2565b145b156115a05761159e6000611efd565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561160a57600080fd5b505af115801561161e573d6000803e3d6000fd5b505050506040513d602081101561163457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461177f57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561170357600080fd5b505af1158015611717573d6000803e3d6000fd5b505050506040513d602081101561172d57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156117e757600080fd5b505afa1580156117fb573d6000803e3d6000fd5b505050506040513d602081101561181157600080fd5b8101908080519060200190929190505050905090565b60007f4c000000000000000000000000000000000000000000000000000000000000008260008151811061185757fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415806118ea57507f5000000000000000000000000000000000000000000000000000000000000000826001815181106118ba57fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b806119165750600160ff168260028151811061190257fe5b602001015160f81c60f81b60f81c60ff1614155b156119245760019050611950565b6000611939838686611934611f0e565b611fb0565b90508061194a576002915050611950565b60009150505b9392505050565b60008083118015611969575060208311155b61197257600080fd5b600a84029350606060016040519080825280601f01601f1916602001820160405280156119ae5781602001600182028038833980820191505090505b5090508360f81b816000815181106119c257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f191660200182016040528015611a275781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f191660200182016040528015611a605781602001600182028038833980820191505090505b5090506000611a6d61265b565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f191660200182016040528015611ac15781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f191660200182016040528015611b005781602001600182028038833980820191505090505b509050611b13826018600884600061297b565b50611b1c61430f565b60405180608001604052808781526020018881526020018681526020018481525090506000611b816040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c6129da565b9050606060086040519080825280601f01601f191660200182016040528015611bb95781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a010000000000000000000000000000000000000000000000000000810460228301537901000000000000000000000000000000000000000000000000008104602183015378010000000000000000000000000000000000000000000000008104602083015350611edf828285600160048110611cf857fe5b6020020151600287600060048110611d0c57fe5b60200201516040518082805190602001908083835b60208310611d445780518252602082019150602081019050602083039250611d21565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015611d86573d6000803e3d6000fd5b5050506040513d6020811015611d9b57600080fd5b810190808051906020019092919050505087600260048110611db957fe5b60200201516040516020018085805190602001908083835b60208310611df45780518252602082019150602081019050602083039250611dd1565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b60208310611e455780518252602082019150602081019050602083039250611e22565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b60208310611e9c5780518252602082019150602081019050602083039250611e79565b6001836020036101000a03801982511681845116808217855250505050505090500194505050505060405160208183030381529060405280519060200120612d49565b8199505050505050505050509392505050565b6000813b9050919050565b6000611f07612d65565b9050919050565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611fa65780601f10611f7b57610100808354040283529160200191611fa6565b820191906000526020600020905b815481529060010190602001808311611f8957829003601f168201915b5050505050905090565b6000806020600287604581518110611fc457fe5b602001015160f81c60f81b60f81c60ff1601604401019050606060206040519080825280601f01601f1916602001820160405280156120125781602001600182028038833980820191505090505b5090506120248783602084600061297b565b50600284876040516020018083805190602001908083835b6020831061205f578051825260208201915060208101905060208303925061203c565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083106120cd57805182526020820191506020810190506020830392506120aa565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa15801561210f573d6000803e3d6000fd5b5050506040513d602081101561212457600080fd5b8101908080519060200190929190505050604051602001808281526020019150506040516020818303038152906040528051906020012081805190602001201461217357600092505050612653565b6060600288600160498601018151811061218957fe5b602001015160f81c60f81b60f81c60ff16016040519080825280601f01601f1916602001820160405280156121cd5781602001600182028038833980820191505090505b5090506121e28860498501835184600061297b565b506122ad6002826040518082805190602001908083835b6020831061221c57805182526020820191506020810190506020830392506121f9565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa15801561225e573d6000803e3d6000fd5b5050506040513d602081101561227357600080fd5b8101908080519060200190929190505050878a600860208801018151811061229757fe5b602001015160f81c60f81b60f81c60ff166132bc565b6122bd5760009350505050612653565b606060296040519080825280601f01601f1916602001820160405280156122f35781602001600182028038833980820191505090505b5090506123088960208601602984600061297b565b506060604080519080825280601f01601f19166020018201604052801561233e5781602001600182028038833980820191505090505b50905060006041845160296020890101010190506123648b60408303604085600061297b565b5060006002836040518082805190602001908083835b6020831061239d578051825260208201915060208101905060208303925061237a565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa1580156123df573d6000803e3d6000fd5b5050506040513d60208110156123f457600080fd5b8101908080519060200190929190505050905083816040516020018083805190602001908083835b6020831061243f578051825260208201915060208101905060208303925061241c565b6001836020036101000a0380198251168184511680821785525050505050509050018281526020019250505060405160208183030381529060405280519060200120600460008d81526020019081526020016000205414156124b757600460008c8152602001908152602001600020600090556124c7565b6000975050505050505050612653565b606060496040519080825280601f01601f1916602001820160405280156124fd5781602001600182028038833980820191505090505b50905061250f8d89604984600061297b565b506125b86002826040518082805190602001908083835b602083106125495780518252602082019150602081019050602083039250612526565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa15801561258b573d6000803e3d6000fd5b5050506040513d60208110156125a057600080fd5b8101908080519060200190929190505050878661336c565b6125cd57600098505050505050505050612653565b6005600083815260200190815260200160002060009054906101000a900460ff16612627576125fc8d8461352a565b6005600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505b6005600083815260200190815260200160002060009054906101000a900460ff16985050505050505050505b949350505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806126e3575060006126e1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611ef2565b145b156126f4576126f26000611efd565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561275e57600080fd5b505af1158015612772573d6000803e3d6000fd5b505050506040513d602081101561278857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146128d357600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561285757600080fd5b505af115801561286b573d6000803e3d6000fd5b505050506040513d602081101561288157600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561293b57600080fd5b505afa15801561294f573d6000803e3d6000fd5b505050506040513d602081101561296557600080fd5b8101908080519060200190929190505050905090565b606060008285019050808451101561299257600080fd5b600086602001905060008460200190505b8688602001018210156129cb57818901518082880152506020820191506020810190506129a3565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480612a6257506000612a60600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611ef2565b145b15612a7357612a716000611efd565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612add57600080fd5b505af1158015612af1573d6000803e3d6000fd5b505050506040513d6020811015612b0757600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612c5257600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612bd657600080fd5b505af1158015612bea573d6000803e3d6000fd5b505050506040513d6020811015612c0057600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60606004604051908082528060200260200182016040528015612c8957816020015b6060815260200190600190039081612c745790505b50905083600060048110612c9957fe5b602002015181600081518110612cab57fe5b602002602001018190525083600160048110612cc357fe5b602002015181600181518110612cd557fe5b602002602001018190525083600260048110612ced57fe5b602002015181600281518110612cff57fe5b602002602001018190525083600360048110612d1757fe5b602002015181600381518110612d2957fe5b6020026020010181905250612d3f858285613942565b9150509392505050565b8060046000848152602001908152602001600020819055505050565b600080612d85731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611ef2565b1115612e2757731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612e1e6040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250613ea8565b600190506132b9565b6000612e4673c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611ef2565b1115612ee85773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612edf6040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250613ea8565b600190506132b9565b6000612f0773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611ef2565b1115612fa95773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612fa06040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250613ea8565b600190506132b9565b6000612fc873146500cfd35b22e4a392fe0adc06de1a1368ed48611ef2565b111561306a5773146500cfd35b22e4a392fe0adc06de1a1368ed48600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506130616040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250613ea8565b600190506132b9565b600061308973a2998efd205fb9d4b4963afb70778d6354ad3a41611ef2565b111561312b5773a2998efd205fb9d4b4963afb70778d6354ad3a41600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506131226040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250613ea8565b600190506132b9565b600061314a736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611ef2565b11156131ae57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506132b9565b60006131cd7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611ef2565b1115613231577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506132b9565b60006132507351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611ef2565b11156132b4577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506132b9565b600090505b90565b60008060019050828451146132d057600080fd5b60008090505b83811015613360578481815181106132ea57fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191686826020811061332357fe5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461335357600091505b80806001019150506132d6565b50809150509392505050565b6000806000806000606060206040519080825280601f01601f1916602001820160405280156133aa5781602001600182028038833980820191505090505b50905060006020896003815181106133be57fe5b602001015160f81c60f81b60f81c60ff160360040190506133e48982602085600061297b565b9150606060206040519080825280601f01601f19166020018201604052801561341c5781602001600182028038833980820191505090505b5090506022820191506134588a60208c600186038151811061343a57fe5b602001015160f81c60f81b60f81c60ff16038401602084600061297b565b905060208301519450602081015193506134758b601b8787613ec2565b80975081985050508573ffffffffffffffffffffffffffffffffffffffff16898051906020012060001c73ffffffffffffffffffffffffffffffffffffffff1614156134cb576001975050505050505050613523565b6134d88b601c8787613ec2565b80975081985050508573ffffffffffffffffffffffffffffffffffffffff16898051906020012060001c73ffffffffffffffffffffffffffffffffffffffff16149750505050505050505b9392505050565b6000806060600285600186018151811061354057fe5b602001015160f81c60f81b60f81c60ff16016040519080825280601f01601f1916602001820160405280156135845781602001600182028038833980820191505090505b5090506135968585835184600061297b565b506060604080519080825280601f01601f1916602001820160405280156135cc5781602001600182028038833980820191505090505b5090506135df866004604084600061297b565b50606060626040519080825280601f01601f1916602001820160405280156136165781602001600182028038833980820191505090505b509050600160f81b8160008151811061362b57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061366c8760418803604184600161297b565b5060606040518060400160405280602081526020017ffd94fa71bc0ba10d39d464d0d8f465efeef0a2764e3887fcc9df41ded20f505c81525090506136b7816000602085604261297b565b506137606002836040518082805190602001908083835b602083106136f157805182526020820191506020810190506020830392506136ce565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015613733573d6000803e3d6000fd5b5050506040513d602081101561374857600080fd5b8101908080519060200190929190505050858561336c565b9450846137755760009550505050505061393c565b60606040518060600160405280604081526020016144c2604091399050606060426040519080825280601f01601f1916602001820160405280156137c85781602001600182028038833980820191505090505b50905060fe60f81b816000815181106137dd57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061381c8a6003604184600161297b565b50606060028b60458151811061382e57fe5b602001015160f81c60f81b60f81c60ff16016040519080825280601f01601f1916602001820160405280156138725781602001600182028038833980820191505090505b5090506138858b6044835184600061297b565b5061392e6002836040518082805190602001908083835b602083106138bf578051825260208201915060208101905060208303925061389c565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015613901573d6000803e3d6000fd5b5050506040513d602081101561391657600080fd5b8101908080519060200190929190505050828561336c565b975087985050505050505050505b92915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806139ca575060006139c8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611ef2565b145b156139db576139d96000611efd565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015613a4557600080fd5b505af1158015613a59573d6000803e3d6000fd5b505050506040513d6020811015613a6f57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613bba57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015613b3e57600080fd5b505af1158015613b52573d6000803e3d6000fd5b505050506040513d6020811015613b6857600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015613c51578082015181840152602081019050613c36565b50505050905090810190601f168015613c7e5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015613c9e57600080fd5b505af1158015613cb2573d6000803e3d6000fd5b505050506040513d6020811015613cc857600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115613cfb576000801b915050613ea1565b6060613d0685613f06565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015613dab578082015181840152602081019050613d90565b50505050905090810190601f168015613dd85780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015613e11578082015181840152602081019050613df6565b50505050905090810190601f168015613e3e5780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b158015613e6057600080fd5b505af1158015613e74573d6000803e3d6000fd5b50505050506040513d6020811015613e8b57600080fd5b8101908080519060200190929190505050925050505b9392505050565b8060039080519060200190613ebe929190614336565b5050565b60008060008060405188815287602082015286604082015285606082015260208160808360006001610bb8f192508051915050818193509350505094509492505050565b6060613f10613f86565b613f186143b6565b613f2481610400613f92565b613f2d81613fdc565b60008090505b8351811015613f6f57613f62848281518110613f4b57fe5b602002602001015183613fea90919063ffffffff16565b8080600101915050613f33565b50613f798161400f565b8060000151915050919050565b60405180590338823950565b6000819050600060208281613fa357fe5b0614613fbc5760208181613fb357fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b613fe781600461401d565b50565b613ff7826002835161403e565b61400a818361417e90919063ffffffff16565b505050565b61401a81600761401d565b50565b61403a601f60058360ff16901b178361422990919063ffffffff16565b5050565b6017811161406a576140658160058460ff16901b60ff16178461422990919063ffffffff16565b614179565b60ff81116140ab5761408f601860058460ff16901b178461422990919063ffffffff16565b6140a5816001856142699092919063ffffffff16565b50614178565b61ffff81116140ed576140d1601960058460ff16901b178461422990919063ffffffff16565b6140e7816002856142699092919063ffffffff16565b50614177565b63ffffffff811161413157614115601a60058460ff16901b178461422990919063ffffffff16565b61412b816004856142699092919063ffffffff16565b50614176565b67ffffffffffffffff81116141755761415d601b60058460ff16901b178461422990919063ffffffff16565b614173816008856142699092919063ffffffff16565b505b5b5b5b5b505050565b6141866143b6565b826020015183600001515183510111156141b6576141b58360026141af866020015186516142d0565b026142ec565b5b60008060008451905085518051602081830101945086518101825260208701935050505b602081106141fd57815183526020830192506020820191506020810390506141da565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b8160200151600183600001515101111561424f5761424e8260028460200151026142ec565b5b815180516020818301018381536001820183525050505050565b6142716143b6565b83602001518460000151518301111561429f5761429e8460026142988760200151866142d0565b026142ec565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b6000818311156142e2578290506142e6565b8190505b92915050565b6060826000015190506142ff8383613f92565b614309838261417e565b50505050565b60405180608001604052806004905b606081526020019060019003908161431e5790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061437757805160ff19168380011785556143a5565b828001600101855582156143a5579182015b828111156143a4578251825591602001919060010190614389565b5b5090506143b291906143d0565b5090565b604051806040016040528060608152602001600081525090565b6143f291905b808211156143ee5760008160009055506001016143d6565b5090565b9056fe596f7520617265206e6f7420656e7469746c656420746f206578656375746520746869732066756e6374696f6e2e546865726520617265206e6f7420656e6f7567682066756e647320746f206372656174652074686973207472616e73616374696f6e596f75206d7573742073656e642074686520726571756972656420636f7374206f72206d6f7265546865206265742077617320756e61626c6520746f206265207665726966696564596f752063616e2774207761676572206d6f7265207468616e20352065746865727fb956469c5c9b89840d55b43537e66a98dd4811ea0a27224272c2e5622911e8537a2f8e86a46baec82864e98dd01e9ccc2f8bc5dfc9cbe5a91a290498dd96e450726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e2ea265627a7a72315820b53ee64718a8a6d4347c4bfc9dcb4e5d548e19c03c073cc96dce0796e85be85064736f6c634300050c0032",
  "sourceMap": "115:1589:1:-;;;123:10:3;115:5;;:18;;;;;;;;;;;;;;;;;;878:35:0;11264:4:4;896:16:0;;878:17;;;:35;;:::i;:::-;923:8;:6;;;:8;;:::i;:::-;;115:1589:1;;37079:116:4;11886:1;11862:26;;11870:3;;;;;;;;;;;11862:26;;;11861:64;;;;11923:1;11894:25;11914:3;;;;;;;;;;;11894:11;;;:25;;:::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;;;:35;;:::i;:::-;;11857:130;12021:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12021:16:4;;;;;;;;;;;;;;;;12000:37;;12008:8;;;;;;;;;;;12000:37;;;11996:106;;12074:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12074:16:4;;;;;;;;;;;;;;;;12053:8;;:38;;;;;;;;;;;;;;;;;;11996:106;37158:8;;;;;;;;;;;:21;;;37180:7;37158:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37158:30:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37158:30:4;;;;37079:116;:::o;2920:376:0:-;2962:7;2981:26;3010:1;2981:30;;3021:21;3045:6;3021:30;;3061:15;3079:94;3105:21;229:1;3156:16;3079:25;;;:94;;:::i;:::-;3061:112;;3188:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3282:7;3275:14;;;;;2920:376;:::o;37338:147:4:-;37397:10;37463:5;37451:18;37442:27;;37428:51;;;:::o;12594:205::-;12659:16;12771:21;:19;;;:21;;:::i;:::-;12764:28;;12594:205;;;:::o;45041:2642::-;45143:16;45190:1;45180:7;:11;45179:32;;;;;45208:2;45197:7;:13;;45179:32;45171:41;;;;;;45232:2;45222:12;;;;45290:19;45322:1;45312:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45312:12:4;;;;45290:34;;45357:7;45346:20;;45334:6;45341:1;45334:9;;;;;;;;;;;:32;;;;;;;;;;;45376:19;45408:2;45398:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45398:13:4;;;;45376:35;;45421:27;45461:2;45451:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45451:13:4;;;;45421:43;;45474:30;45507:40;:38;;;:40;;:::i;:::-;45474:73;;45595:4;45587:6;45580:20;45942:9;45932:8;45928:24;45923:1;45915:6;45911:14;45901:25;45897:56;45890:4;45882:6;45878:17;45871:83;45990:4;45974:14;45967:28;46042:22;46035:4;46019:14;46015:25;46008:57;46084:18;46115:2;46105:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46105:13:4;;;;46084:34;;46176:6;46169:4;46162:5;46158:16;46151:32;46202:25;46240:1;46230:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46230:12:4;;;;46202:40;;46252;46262:5;46269:2;46273:1;46276:12;46290:1;46252:9;;;:40;;:::i;:::-;;46302:20;;:::i;:::-;:62;;;;;;;;46326:6;46302:62;;;;46334:6;46302:62;;;;46342:14;46302:62;;;;46358:5;46302:62;;;;;46374:15;46392:47;;;;;;;;;;;;;;;;;;46417:4;46423:15;46392:14;;;:47;;:::i;:::-;46374:65;;46449:30;46492:1;46482:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46482:12:4;;;;46449:45;;46560:4;46546:12;46542:23;46536:30;46624:65;46621:1;46617:73;46610:4;46591:17;46587:28;46579:112;46749:63;46746:1;46742:71;46735:4;46716:17;46712:28;46704:110;46872:61;46869:1;46865:69;46858:4;46839:17;46835:28;46827:108;46993:59;46990:1;46986:67;46979:4;46960:17;46956:28;46948:106;47112:57;47109:1;47105:65;47098:4;47079:17;47075:28;47067:104;47229:55;47226:1;47222:63;47215:4;47196:17;47192:28;47184:102;47344:53;47341:1;47337:61;47330:4;47311:17;47307:28;47299:100;47457:51;47454:1;47450:59;47443:4;47424:17;47420:28;47412:98;46513:1007;47529:123;47561:7;47597:17;47616:4;47621:1;47616:7;;;;;;;;;;;47625:15;47632:4;47637:1;47632:7;;;;;;;;;;;47625:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47625:15:4;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;47625:15:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;47625:15:4;;;;;;;;;;;;;;;;47642:4;47647:1;47642:7;;;;;;;;;;;47580:70;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47580:70:4;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47580:70:4;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47580:70:4;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;47580:70:4;;;47570:81;;;;;;47529:31;;;:123;;:::i;:::-;47669:7;47662:14;;;;;;;;;;;45041:2642;;;;;:::o;13073:2031::-;13122:16;13212:1;13154:55;13166:42;13154:11;;;:55;;:::i;:::-;:59;13150:246;;;13265:42;13239:3;;:69;;;;;;;;;;;;;;;;;;13322:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;13381:4;13374:11;;;;13150:246;13467:1;13409:55;13421:42;13409:11;;;:55;;:::i;:::-;:59;13405:255;;;13528:42;13502:3;;:69;;;;;;;;;;;;;;;;;;13585:39;;;;;;;;;;;;;;;;;;:23;;;:39;;:::i;:::-;13645:4;13638:11;;;;13405:255;13731:1;13673:55;13685:42;13673:11;;;:55;;:::i;:::-;:59;13669:250;;;13790:42;13764:3;;:69;;;;;;;;;;;;;;;;;;13847:36;;;;;;;;;;;;;;;;;;:23;;;:36;;:::i;:::-;13904:4;13897:11;;;;13669:250;13990:1;13932:55;13944:42;13932:11;;;:55;;:::i;:::-;:59;13928:254;;;14051:42;14025:3;;:69;;;;;;;;;;;;;;;;;;14108:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;14167:4;14160:11;;;;13928:254;14253:1;14195:55;14207:42;14195:11;;;:55;;:::i;:::-;:59;14191:252;;;14313:42;14287:3;;:69;;;;;;;;;;;;;;;;;;14370:37;;;;;;;;;;;;;;;;;;:23;;;:37;;:::i;:::-;14428:4;14421:11;;;;14191:252;14514:1;14456:55;14468:42;14456:11;;;:55;;:::i;:::-;:59;14452:202;;;14575:42;14549:3;;:69;;;;;;;;;;;;;;;;;;14639:4;14632:11;;;;14452:202;14725:1;14667:55;14679:42;14667:11;;;:55;;:::i;:::-;:59;14663:201;;;14785:42;14759:3;;:69;;;;;;;;;;;;;;;;;;14849:4;14842:11;;;;14663:201;14935:1;14877:55;14889:42;14877:11;;;:55;;:::i;:::-;:59;14873:203;;;14997:42;14971:3;;:69;;;;;;;;;;;;;;;;;;15061:4;15054:11;;;;14873:203;15092:5;15085:12;;13073:2031;;:::o;37631:169::-;37711:23;11886:1;11862:26;;11870:3;;;;;;;;;;;11862:26;;;11861:64;;;;11923:1;11894:25;11914:3;;;;;;;;;;;11894:11;;;:25;;:::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;;;:35;;:::i;:::-;;11857:130;12021:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12021:16:4;;;;;;;;;;;;;;;;12000:37;;12008:8;;;;;;;;;;;12000:37;;;11996:106;;12074:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12074:16:4;;;;;;;;;;;;;;;;12053:8;;:38;;;;;;;;;;;;;;;;;;11996:106;37753:8;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37753:40:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37753:40:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;37753:40:4;;;;;;;;;;;;;;;;37746:47;;37631:169;:::o;54334:693::-;54462:25;54499:14;54526:9;54516:7;:19;54499:36;;54567:9;54553:3;:10;:23;;54545:32;;;;;;54632:6;54646:11;54641:2;:16;54632:25;;54748:6;54762:9;54757:2;:14;54748:23;;54781:220;54812:7;54798:11;54793:2;:16;:26;54788:1;:32;54781:220;;;54891:1;54884:5;54880:13;54874:20;54931:3;54927:1;54922:3;54918:11;54911:24;54845:104;54967:2;54962:7;;;;54988:2;54983:7;;;;54781:220;;;55017:3;55010:10;;;;;54334:693;;;;;;;:::o;35036:377::-;35156:11;11886:1;11862:26;;11870:3;;;;;;;;;;;11862:26;;;11861:64;;;;11923:1;11894:25;11914:3;;;;;;;;;;;11894:11;;;:25;;:::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;;;:35;;:::i;:::-;;11857:130;12021:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12021:16:4;;;;;;;;;;;;;;;;12000:37;;12008:8;;;;;;;;;;;12000:37;;;11996:106;;12074:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12074:16:4;;;;;;;;;;;;;;;;12053:8;;:38;;;;;;;;;;;;;;;;;;11996:106;35179:22;35216:1;35204:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35179:39;;35241:5;35247:1;35241:8;;;;;;;;;;;35228:7;35236:1;35228:10;;;;;;;;;;;;;:21;;;;35272:5;35278:1;35272:8;;;;;;;;;;;35259:7;35267:1;35259:10;;;;;;;;;;;;;:21;;;;35303:5;35309:1;35303:8;;;;;;;;;;;35290:7;35298:1;35290:10;;;;;;;;;;;;;:21;;;;35334:5;35340:1;35334:8;;;;;;;;;;;35321:7;35329:1;35321:10;;;;;;;;;;;;;:21;;;;35359:47;35374:11;35387:7;35396:9;35359:14;;;:47;;:::i;:::-;35352:54;;;35036:377;;;;;:::o;47689:152::-;47823:11;47788:22;:32;47811:8;47788:32;;;;;;;;;;;:46;;;;47689:152;;:::o;12805:125::-;12910:13;12886:21;:37;;;;;;;;;;;;:::i;:::-;;12805:125;:::o;29559:454::-;29678:11;11886:1;11862:26;;11870:3;;;;;;;;;;;11862:26;;;11861:64;;;;11923:1;11894:25;11914:3;;;;;;;;;;;11894:11;;;:25;;:::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;;;:35;;:::i;:::-;;11857:130;12021:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12021:16:4;;;;;;;;;;;;;;;;12000:37;;12008:8;;;;;;;;;;;12000:37;;;11996:106;;12074:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12074:16:4;;;;;;;;;;;;;;;;12053:8;;:38;;;;;;;;;;;;;;;;;;11996:106;29701:10;29714:8;;;;;;;;;;;:17;;;29732:11;29745:9;29714:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;29714:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29714:41:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29714:41:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;29714:41:4;;;;;;;;;;;;;;;;29701:54;;29801:9;29787:11;:23;29777:7;:33;29769:5;:41;29765:107;;;29833:1;29826:8;;;;;;;29765:107;29881:17;29901:14;29909:5;29901:7;;;:14;;:::i;:::-;29881:34;;29932:8;;;;;;;;;;;:28;;;29967:5;29974:1;29977:11;29990:4;29996:9;29932:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;29932:74:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;29932:74:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29932:74:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29932:74:4;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;29932:74:4;;;;;;;;;;;;;;;;29925:81;;;;12111:1;29559:454;;;;;:::o;44670:365::-;44731:26;44769:19;:17;;;:19;;:::i;:::-;44798:24;;:::i;:::-;44832:22;44844:3;44849:4;44832:11;;;;;:22;;:::i;:::-;44864:16;:3;:14;;;;;:16;;:::i;:::-;44895:6;44904:1;44895:10;;44890:88;44911:4;:11;44907:1;:15;44890:88;;;44943:24;44959:4;44964:1;44959:7;;;;;;;;;;;;;;44943:3;:15;;;;;;:24;;;;:::i;:::-;44924:3;;;;;;;44890:88;;;;44987:17;:3;:15;;;;;:17;;:::i;:::-;45021:3;:7;;;45014:14;;;44670:365;;;:::o;57901:170::-;57995:4;57989:11;58049:4;58042:5;58038:16;58028:8;58022:4;58013:42;57963:102;:::o;4277:434::-;4351:13;4367:9;4351:25;;4407:1;4401:2;4390:8;:13;;;;;;:18;4386:81;;4453:2;4442:8;:13;;;;;;4436:2;:20;4424:32;;;;4386:81;4492:8;4476:4;:13;;:24;;;;;4588:4;4582:11;4619:3;4613:4;4606:17;4648:1;4643:3;4636:14;4685:8;4680:3;4676:18;4670:4;4663:32;4557:148;;;;:::o;10510:128::-;10581:50;10608:4;8666:1;10581:26;;;:50;;:::i;:::-;10510:128;:::o;10125:178::-;10218:49;10229:4;8617:1;10253:6;:13;10218:10;;;:49;;:::i;:::-;10277:19;10289:6;10277:4;:11;;;;;;:19;;;;:::i;:::-;;10125:178;;:::o;10774:136::-;10846:57;10873:4;8828:1;10846:26;;;:57;;:::i;:::-;10774:136;:::o;9564:145::-;9664:38;9698:2;9693:1;9683:6;:11;;;;9682:18;9664:4;:11;;;;;;:38;;;;:::i;:::-;9564:145;;:::o;8836:722::-;8947:2;8937:6;:12;8933:619;;8965:42;8999:6;8994:1;8984:6;:11;;;;8983:22;;;8965:4;:11;;;;;;:42;;;;:::i;:::-;8933:619;;;9038:4;9028:6;:14;9024:528;;9058:38;9092:2;9087:1;9077:6;:11;;;;9076:18;9058:4;:11;;;;;;:38;;;;:::i;:::-;9110:25;9125:6;9133:1;9110:4;:14;;;;;;:25;;;;;:::i;:::-;;9024:528;;;9166:6;9156;:16;9152:400;;9188:38;9222:2;9217:1;9207:6;:11;;;;9206:18;9188:4;:11;;;;;;:38;;;;:::i;:::-;9240:25;9255:6;9263:1;9240:4;:14;;;;;;:25;;;;;:::i;:::-;;9152:400;;;9296:10;9286:6;:20;9282:270;;9322:38;9356:2;9351:1;9341:6;:11;;;;9340:18;9322:4;:11;;;;;;:38;;;;:::i;:::-;9374:25;9389:6;9397:1;9374:4;:14;;;;;;:25;;;;;:::i;:::-;;9282:270;;;9430:18;9420:6;:28;9416:136;;9464:38;9498:2;9493:1;9483:6;:11;;;;9482:18;9464:4;:11;;;;;;:38;;;;:::i;:::-;9516:25;9531:6;9539:1;9516:4;:14;;;;;;:25;;;;;:::i;:::-;;9416:136;9282:270;9152:400;9024:528;8933:619;8836:722;;;:::o;5329:1213::-;5408:21;;:::i;:::-;5478:4;:13;;;5460:4;:8;;;:15;5445:5;:12;:30;:46;5441:127;;;5507:50;5514:4;5555:1;5520:32;5524:4;:13;;;5539:5;:12;5520:3;;;:32;;:::i;:::-;:36;5507:6;;;:50;;:::i;:::-;5441:127;5577:9;5596:8;5614;5625:5;:12;5614:23;;5690:4;5684:11;5765:6;5759:13;5852:2;5843:6;5835;5831:19;5827:28;5819:36;;5975:5;5969:12;5961:6;5957:25;5949:6;5942:41;6038:2;6031:5;6027:14;6020:21;;5656:395;;6060:206;6073:2;6066:3;:9;6060:206;;6190:3;6184:10;6178:4;6171:24;6230:2;6222:10;;;;6253:2;6246:9;;;;6084:2;6077:9;;;;6060:206;;;6275:9;6307:1;6300:3;6295:2;:8;6287:3;:17;:21;6275:33;;6400:4;6396:9;6390:3;6384:10;6380:26;6452:4;6445;6439:11;6435:22;6496:7;6486:8;6483:21;6477:4;6470:35;6351:164;;6531:4;6524:11;;;;;;5329:1213;;;;:::o;6826:575::-;6925:4;:13;;;6921:1;6903:4;:8;;;:15;:19;:35;6899:97;;;6954:31;6961:4;6983:1;6967:4;:13;;;:17;6954:6;;;:31;;:::i;:::-;6899:97;7048:4;7042:11;7123:6;7117:13;7214:2;7205:6;7197;7193:19;7189:28;7312:5;7306:4;7298:20;7358:1;7350:6;7346:14;7338:6;7331:30;7014:381;;;;;:::o;7685:735::-;7770:21;;:::i;:::-;7832:4;:13;;;7814:4;:8;;;:15;7807:4;:22;:38;7803:111;;;7861:42;7868:4;7901:1;7874:24;7878:4;:13;;;7893:4;7874:3;;;:24;;:::i;:::-;:28;7861:6;;;:42;;:::i;:::-;7803:111;7923:9;7949:1;7942:4;7935:3;:11;:15;7923:27;;8003:4;7997:11;8078:6;8072:13;8169:4;8160:6;8152;8148:19;8144:30;8306:5;8298:4;8294:9;8287:4;8281:11;8277:27;8274:38;8268:4;8261:52;8353:4;8345:6;8341:17;8333:6;8326:33;7969:424;;;8409:4;8402:11;;;7685:735;;;;;:::o;4896:146::-;4949:9;4979:2;4974;:7;4970:47;;;5004:2;4997:9;;;;4970:47;5033:2;5026:9;;4896:146;;;;;:::o;4717:173::-;4792:19;4814:4;:8;;;4792:30;;4832:21;4837:4;4843:9;4832:4;;;:21;;:::i;:::-;4863:20;4870:4;4876:6;4863;;;:20;;:::i;:::-;;4717:173;;;:::o;115:1589:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "115:1589:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;744:43:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;744:43:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;744:43:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;720:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;720:17:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;720:17:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15342:122:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15342:122:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15342:122:4;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15342:122:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15342:122:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15342:122:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15342:122:4;;;;;;;;;;;;;;;:::i;:::-;;912:306:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;912:306:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;912:306:1;;;;;;;;;;;;;;;;;:::i;:::-;;1509:1405:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1509:1405:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1509:1405:0;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1509:1405:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1509:1405:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1509:1405:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1509:1405:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1509:1405:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1509:1405:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1509:1405:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1509:1405:0;;;;;;;;;;;;;;;:::i;:::-;;62:70:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;62:70:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;944:559:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;944:559:0;;;;;;;;;;;;;;;;;:::i;:::-;;1224:225:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1224:225:1;;;:::i;:::-;;1582:120;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1582:120:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:28:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;49:28:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1455:121:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1455:121:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2920:376:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;793:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;793:47:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;793:47:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;763:143:1;;;:::i;:::-;;279:144:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;279:144:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;279:144:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;744:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;720:17::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;15342:122:4:-;15417:40;15428:5;15435:7;15454:1;15444:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;15444:12:4;;;;15417:10;:40::i;:::-;15342:122;;:::o;912:306:1:-;199:5:3;;;;;;;;;;;185:19;;:10;:19;;;177:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;991:4:1;998:7;402:6:5;382:8;:16;;;:26;;374:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1038:5:1;;;;;;;;;;;1024:19;;:10;:19;;;1017:27;;;;1054:26;1091:4;1083:21;;;1054:50;;1114:5;;;;;;;;;;;:14;;:23;1129:7;1114:23;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1114:23:1;1203:7;1179:21;:31;1162:4;1154:21;;;:56;1147:64;;;;474:1:5;265::3;;912:306:1;:::o;1509:1405:0:-;1630:20;:18;:20::i;:::-;1616:34;;:10;:34;;;1608:43;;;;;;1738:1;1666:68;1708:8;1718:7;1727:6;1666:41;:68::i;:::-;:73;;;1662:1245;;1760:56;1770:8;1760:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1830:7;;1662:1245;1867:12;1934:1;229;177:3;1883:47;1882:53;1867:68;;1949:17;2014:7;2001;1984:25;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1984:25:0;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1984:25:0;;;1974:36;;;;;;1969:42;;:52;;;;;;1949:72;;2875:21;2887:8;2875:21;;;;;;;;;;;;;;;;;;1662:1245;;1509:1405;;;;:::o;62:70:6:-;101:4;126:1;120:3;:7;;;;;;113:14;;62:70;:::o;944:559:0:-;1000:10;111:4:5;98:9;:17;;90:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;237:7;224:9;:20;;216:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1068:10:0;1080:7;402:6:5;382:8;:16;;;:26;;374:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1127:4:0;1134:7;402:6:5;382:8;:16;;;:26;;374:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1157:19:0;1179:11;:23;1191:10;1179:23;;;;;;;;;;;;;;;1157:45;;1229:10;1212:7;:14;;;:27;;;;;;;;;;;;;;;;;;1266:7;1249;:14;;:24;;;;1303:4;1283:7;:17;;;:24;;;;;;;;;;;;;;;;;;1347:1;1317:14;:26;1332:10;1317:26;;;;;;;;;;;;;;;;:31;;;;;;;;;;;1358:15;1376:8;:6;:8::i;:::-;1358:26;;1407:7;1394;:10;;:20;;;;1424:4;1434:7;1424:18;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1424:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1457:39;1467:7;1476:10;1488:7;1457:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;474:1:5;;;;290;;944:559:0;;:::o;1224:225:1:-;199:5:3;;;;;;;;;;;185:19;;:10;:19;;;177:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1295:5:1;;;;;;;;;;;1281:19;;:10;:19;;;1274:27;;;;1311:21;1343:4;1335:21;;;1311:45;;1366:5;;;;;;;;;;;:14;;:32;1381:16;1366:32;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1366:32:1;1440:1;1423:4;1415:21;;;:26;1408:34;;;;265:1:3;1224:225:1:o;1582:120::-;1623:7;1632:4;1664:5;;;;;;;;;;;1680;;;;;;;;;;;1672:22;;;1648:47;;;;;;;1582:120;;:::o;49:28:3:-;;;;;;;;;;;;;:::o;1455:121:1:-;1499:7;1508:4;1540;1555;1547:21;;;1524:45;;;;1455:121;;:::o;2920:376:0:-;2962:7;2981:26;3010:1;2981:30;;3021:21;3045:6;3021:30;;3061:15;3079:94;3105:21;229:1;3156:16;3079:25;:94::i;:::-;3061:112;;3188:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3282:7;3275:14;;;;;2920:376;:::o;793:47::-;;;;;;;;;;;;;;;;;:::o;763:143:1:-;824:10;836:9;402:6:5;382:8;:16;;;:26;;374:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;862:37:1;877:10;889:9;862:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;763:143;;:::o;279:144:3:-;199:5;;;;;;;;;;;185:19;;:10;:19;;;177:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:1;367:22;;:8;:22;;;;359:31;;;;;;408:8;400:5;;:16;;;;;;;;;;;;;;;;;;279:144;:::o;37202:130:4:-;37262:24;11886:1;11862:26;;11870:3;;;;;;;;;;;11862:26;;;11861:64;;;;11923:1;11894:25;11914:3;;;;;;;;;;;11894:11;:25::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;:35::i;:::-;;11857:130;12021:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12021:16:4;;;;;;;;;;;;;;;;12000:37;;12008:8;;;;;;;;;;;12000:37;;;11996:106;;12074:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12074:16:4;;;;;;;;;;;;;;;;12053:8;;:38;;;;;;;;;;;;;;;;;;11996:106;37305:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37305:20:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37305:20:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;37305:20:4;;;;;;;;;;;;;;;;37298:27;;37202:130;:::o;50459:579::-;50590:17;50717:16;:6;50724:1;50717:9;;;;;;;;;;;;;;;;:16;;;;;50716:40;;;;50739:16;:6;50746:1;50739:9;;;;;;;;;;;;;;;;:16;;;;;50716:40;:74;;;;50787:1;50761:28;;50767:6;50774:1;50767:9;;;;;;;;;;;;;;;;50761:16;;:28;;;;50716:74;50712:113;;;50813:1;50806:8;;;;50712:113;50834:18;50855:96;50891:6;50899:8;50915:7;50925:25;:23;:25::i;:::-;50855:35;:96::i;:::-;50834:117;;50966:13;50961:53;;51002:1;50995:8;;;;;50961:53;51030:1;51023:8;;;50459:579;;;;;;:::o;45041:2642::-;45143:16;45190:1;45180:7;:11;45179:32;;;;;45208:2;45197:7;:13;;45179:32;45171:41;;;;;;45232:2;45222:12;;;;45290:19;45322:1;45312:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45312:12:4;;;;45290:34;;45357:7;45346:20;;45334:6;45341:1;45334:9;;;;;;;;;;;:32;;;;;;;;;;;45376:19;45408:2;45398:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45398:13:4;;;;45376:35;;45421:27;45461:2;45451:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45451:13:4;;;;45421:43;;45474:30;45507:40;:38;:40::i;:::-;45474:73;;45595:4;45587:6;45580:20;45942:9;45932:8;45928:24;45923:1;45915:6;45911:14;45901:25;45897:56;45890:4;45882:6;45878:17;45871:83;45990:4;45974:14;45967:28;46042:22;46035:4;46019:14;46015:25;46008:57;46084:18;46115:2;46105:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46105:13:4;;;;46084:34;;46176:6;46169:4;46162:5;46158:16;46151:32;46202:25;46240:1;46230:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46230:12:4;;;;46202:40;;46252;46262:5;46269:2;46273:1;46276:12;46290:1;46252:9;:40::i;:::-;;46302:20;;:::i;:::-;:62;;;;;;;;46326:6;46302:62;;;;46334:6;46302:62;;;;46342:14;46302:62;;;;46358:5;46302:62;;;;;46374:15;46392:47;;;;;;;;;;;;;;;;;;46417:4;46423:15;46392:14;:47::i;:::-;46374:65;;46449:30;46492:1;46482:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46482:12:4;;;;46449:45;;46560:4;46546:12;46542:23;46536:30;46624:65;46621:1;46617:73;46610:4;46591:17;46587:28;46579:112;46749:63;46746:1;46742:71;46735:4;46716:17;46712:28;46704:110;46872:61;46869:1;46865:69;46858:4;46839:17;46835:28;46827:108;46993:59;46990:1;46986:67;46979:4;46960:17;46956:28;46948:106;47112:57;47109:1;47105:65;47098:4;47079:17;47075:28;47067:104;47229:55;47226:1;47222:63;47215:4;47196:17;47192:28;47184:102;47344:53;47341:1;47337:61;47330:4;47311:17;47307:28;47299:100;47457:51;47454:1;47450:59;47443:4;47424:17;47420:28;47412:98;46513:1007;47529:123;47561:7;47597:17;47616:4;47621:1;47616:7;;;;;;;;;;;47625:15;47632:4;47637:1;47632:7;;;;;;;;;;;47625:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47625:15:4;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;47625:15:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;47625:15:4;;;;;;;;;;;;;;;;47642:4;47647:1;47642:7;;;;;;;;;;;47580:70;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47580:70:4;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47580:70:4;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47580:70:4;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;47580:70:4;;;47570:81;;;;;;47529:31;:123::i;:::-;47669:7;47662:14;;;;;;;;;;;45041:2642;;;;;:::o;37338:147::-;37397:10;37463:5;37451:18;37442:27;;37428:51;;;:::o;12594:205::-;12659:16;12771:21;:19;:21::i;:::-;12764:28;;12594:205;;;:::o;12936:131::-;12994:26;13039:21;13032:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12936:131;:::o;51444:2755::-;51596:19;51739:22;51813:2;51808:1;51785:6;51792:10;51785:18;;;;;;;;;;;;;;;;51779:25;;51774:31;;:35;51764:6;:46;:51;51739:76;;51825:20;51858:2;51848:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;51848:13:4;;;;51825:36;;51871:52;51881:6;51889:17;51908:2;51912:7;51921:1;51871:9;:52::i;:::-;;51988:48;52012:12;52026:8;51995:40;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;51995:40:4;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;51995:40:4;;;51988:48;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;51988:48:4;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;51988:48:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;51988:48:4;;;;;;;;;;;;;;;;51971:66;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;51971:66:4;;;51961:77;;;;;;51949:7;51939:18;;;;;;:99;51933:145;;52062:5;52055:12;;;;;;51933:145;52087:17;52182:1;52128:6;52175:1;52156:15;52135:17;:37;:41;52128:49;;;;;;;;;;;;;;;;52122:56;;52117:62;;:66;52107:77;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;52107:77:4;;;;52087:97;;52194:78;52204:6;52233:15;52212:17;:37;52251:4;:11;52264:4;52270:1;52194:9;:78::i;:::-;;52440:90;52459:12;52466:4;52459:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;52459:12:4;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;52459:12:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;52459:12:4;;;;;;;;;;;;;;;;52473:7;52493:6;52525:1;52520:2;52500:17;:22;:26;52493:34;;;;;;;;;;;;;;;;52487:41;;52482:47;;52440:18;:90::i;:::-;52435:134;;52553:5;52546:12;;;;;;;52435:134;52815:29;52857:10;52847:21;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;52847:21:4;;;;52815:53;;52878:74;52888:6;52916:2;52896:17;:22;52920:10;52932:16;52950:1;52878:9;:74::i;:::-;;52962:26;53001:2;52991:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;52991:13:4;;;;52962:42;;53014:15;53086:2;53072:4;:11;53058:10;53052:2;53032:17;:22;:37;:51;:56;53014:74;;53098:56;53108:6;53129:2;53116:10;:15;53133:2;53137:13;53152:1;53098:9;:56::i;:::-;;53164:25;53192:21;53199:13;53192:21;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;53192:21:4;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;53192:21:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;53192:21:4;;;;;;;;;;;;;;;;53164:49;;53290:16;53308:17;53273:53;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;53273:53:4;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;53273:53:4;;;53263:64;;;;;;53227:22;:32;53250:8;53227:32;;;;;;;;;;;;:100;53223:230;;;53392:22;:32;53415:8;53392:32;;;;;;;;;;;53385:39;;;53223:230;;;53448:5;53441:12;;;;;;;;;;;53223:230;53575:20;53608:15;53598:26;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;53598:26:4;;;;53575:49;;53634:65;53644:6;53652:17;53671:15;53688:7;53697:1;53634:9;:65::i;:::-;;53714:47;53724:15;53731:7;53724:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;53724:15:4;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;53724:15:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;53724:15:4;;;;;;;;;;;;;;;;53741:4;53747:13;53714:9;:47::i;:::-;53709:91;;53784:5;53777:12;;;;;;;;;;;;53709:91;53897:41;:60;53939:17;53897:60;;;;;;;;;;;;;;;;;;;;;53892:224;;54036:69;54086:6;54094:10;54036:49;:69::i;:::-;53973:41;:60;54015:17;53973:60;;;;;;;;;;;;:132;;;;;;;;;;;;;;;;;;53892:224;54132:41;:60;54174:17;54132:60;;;;;;;;;;;;;;;;;;;;;54125:67;;;;;;;;;;51444:2755;;;;;;;:::o;37631:169::-;37711:23;11886:1;11862:26;;11870:3;;;;;;;;;;;11862:26;;;11861:64;;;;11923:1;11894:25;11914:3;;;;;;;;;;;11894:11;:25::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;:35::i;:::-;;11857:130;12021:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12021:16:4;;;;;;;;;;;;;;;;12000:37;;12008:8;;;;;;;;;;;12000:37;;;11996:106;;12074:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12074:16:4;;;;;;;;;;;;;;;;12053:8;;:38;;;;;;;;;;;;;;;;;;11996:106;37753:8;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37753:40:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37753:40:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;37753:40:4;;;;;;;;;;;;;;;;37746:47;;37631:169;:::o;54334:693::-;54462:25;54499:14;54526:9;54516:7;:19;54499:36;;54567:9;54553:3;:10;:23;;54545:32;;;;;;54632:6;54646:11;54641:2;:16;54632:25;;54748:6;54762:9;54757:2;:14;54748:23;;54781:220;54812:7;54798:11;54793:2;:16;:26;54788:1;:32;54781:220;;;54891:1;54884:5;54880:13;54874:20;54931:3;54927:1;54922:3;54918:11;54911:24;54845:104;54967:2;54962:7;;;;54988:2;54983:7;;;;54781:220;;;55017:3;55010:10;;;;;54334:693;;;;;;;:::o;35036:377::-;35156:11;11886:1;11862:26;;11870:3;;;;;;;;;;;11862:26;;;11861:64;;;;11923:1;11894:25;11914:3;;;;;;;;;;;11894:11;:25::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;:35::i;:::-;;11857:130;12021:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12021:16:4;;;;;;;;;;;;;;;;12000:37;;12008:8;;;;;;;;;;;12000:37;;;11996:106;;12074:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12074:16:4;;;;;;;;;;;;;;;;12053:8;;:38;;;;;;;;;;;;;;;;;;11996:106;35179:22;35216:1;35204:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35179:39;;35241:5;35247:1;35241:8;;;;;;;;;;;35228:7;35236:1;35228:10;;;;;;;;;;;;;:21;;;;35272:5;35278:1;35272:8;;;;;;;;;;;35259:7;35267:1;35259:10;;;;;;;;;;;;;:21;;;;35303:5;35309:1;35303:8;;;;;;;;;;;35290:7;35298:1;35290:10;;;;;;;;;;;;;:21;;;;35334:5;35340:1;35334:8;;;;;;;;;;;35321:7;35329:1;35321:10;;;;;;;;;;;;;:21;;;;35359:47;35374:11;35387:7;35396:9;35359:14;:47::i;:::-;35352:54;;;35036:377;;;;;:::o;47689:152::-;47823:11;47788:22;:32;47811:8;47788:32;;;;;;;;;;;:46;;;;47689:152;;:::o;13073:2031::-;13122:16;13212:1;13154:55;13166:42;13154:11;:55::i;:::-;:59;13150:246;;;13265:42;13239:3;;:69;;;;;;;;;;;;;;;;;;13322:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13381:4;13374:11;;;;13150:246;13467:1;13409:55;13421:42;13409:11;:55::i;:::-;:59;13405:255;;;13528:42;13502:3;;:69;;;;;;;;;;;;;;;;;;13585:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;13645:4;13638:11;;;;13405:255;13731:1;13673:55;13685:42;13673:11;:55::i;:::-;:59;13669:250;;;13790:42;13764:3;;:69;;;;;;;;;;;;;;;;;;13847:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;13904:4;13897:11;;;;13669:250;13990:1;13932:55;13944:42;13932:11;:55::i;:::-;:59;13928:254;;;14051:42;14025:3;;:69;;;;;;;;;;;;;;;;;;14108:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14167:4;14160:11;;;;13928:254;14253:1;14195:55;14207:42;14195:11;:55::i;:::-;:59;14191:252;;;14313:42;14287:3;;:69;;;;;;;;;;;;;;;;;;14370:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14428:4;14421:11;;;;14191:252;14514:1;14456:55;14468:42;14456:11;:55::i;:::-;:59;14452:202;;;14575:42;14549:3;;:69;;;;;;;;;;;;;;;;;;14639:4;14632:11;;;;14452:202;14725:1;14667:55;14679:42;14667:11;:55::i;:::-;:59;14663:201;;;14785:42;14759:3;;:69;;;;;;;;;;;;;;;;;;14849:4;14842:11;;;;14663:201;14935:1;14877:55;14889:42;14877:11;:55::i;:::-;:59;14873:203;;;14997:42;14971:3;;:69;;;;;;;;;;;;;;;;;;15061:4;15054:11;;;;14873:203;15092:5;15085:12;;13073:2031;;:::o;51044:394::-;51155:19;51186:11;51200:4;51186:18;;51240:13;51222:7;:14;:31;51214:40;;;;;;51269:9;51281:1;51269:13;;51264:145;51287:13;51284:1;:16;51264:145;;;51340:7;51348:1;51340:10;;;;;;;;;;;;;;;;51325:25;;;:8;51334:1;51325:11;;;;;;;;;;:25;;;;51321:78;;51379:5;51370:14;;51321:78;51302:3;;;;;;;51264:145;;;;51425:6;51418:13;;;51044:394;;;;;:::o;47847:1003::-;47946:17;47975:10;47995:14;48019:12;48041;48063:18;48094:2;48084:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;48084:13:4;;;;48063:34;;48107:11;48152:4;48137:7;48145:1;48137:10;;;;;;;;;;;;;;;;48131:17;;48126:23;;:30;48121:1;:36;48107:50;;48175:40;48185:7;48194:6;48202:2;48206:5;48213:1;48175:9;:40::i;:::-;48167:48;;48225:18;48256:2;48246:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;48246:13:4;;;;48225:34;;48279:6;48269:16;;;;48303:84;48313:7;48367:4;48343:7;48360:1;48351:6;:10;48343:19;;;;;;;;;;;;;;;;48337:26;;48332:32;;:39;48322:6;:50;48374:2;48378:5;48385:1;48303:9;:84::i;:::-;48295:92;;48445:2;48438:5;48434:14;48428:21;48420:29;;48487:2;48480:5;48476:14;48470:21;48462:29;;48528:41;48544:8;48554:2;48558:4;48564;48528:15;:41::i;:::-;48510:59;;;;;;;;48632:6;48583:55;;48617:7;48607:18;;;;;;48599:27;;48583:55;;;48579:265;;;48661:4;48654:11;;;;;;;;;;;48579:265;48714:41;48730:8;48740:2;48744:4;48750;48714:15;:41::i;:::-;48696:59;;;;;;;;48826:6;48777:55;;48811:7;48801:18;;;;;;48793:27;;48777:55;;;48769:64;;;;;;;;;47847:1003;;;;;;:::o;48856:1597::-;48972:19;49003:10;49164:17;49233:1;49205:6;49226:1;49212:11;:15;49205:23;;;;;;;;;;;;;;;;49199:30;;49194:36;;:40;49184:51;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;49184:51:4;;;;49164:71;;49245:52;49255:6;49263:11;49276:4;:11;49289:4;49295:1;49245:9;:52::i;:::-;;49307:27;49347:2;49337:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;49337:13:4;;;;49307:43;;49360:47;49370:6;49378:5;49385:2;49389:14;49405:1;49360:9;:47::i;:::-;;49417:20;49450:11;49440:22;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;49440:22:4;;;;49417:45;;49496:1;49485:14;;49472:7;49480:1;49472:10;;;;;;;;;;;:27;;;;;;;;;;;49516:51;49526:6;49548:2;49534:11;:16;49552:2;49556:7;49565:1;49516:9;:51::i;:::-;;49577:21;:93;;;;;;;;;;;;;;;;;;;49680:43;49690:8;49700:1;49703:2;49707:7;49716:6;49680:9;:43::i;:::-;;49741:48;49751:15;49758:7;49751:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;49751:15:4;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;49751:15:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;49751:15:4;;;;;;;;;;;;;;;;49768:4;49774:14;49741:9;:48::i;:::-;49733:56;;49804:5;49799:49;;49832:5;49825:12;;;;;;;;;49799:49;49949:22;:158;;;;;;;;;;;;;;;;;;;50117:20;50150:6;50140:17;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;50140:17:4;;;;50117:40;;50180:4;50167:17;;:7;50175:1;50167:10;;;;;;;;;;;:17;;;;;;;;;;;50194:36;50204:6;50212:1;50215:2;50219:7;50228:1;50194:9;:36::i;:::-;;50240:17;50304:1;50281:6;50288:10;50281:18;;;;;;;;;;;;;;;;50275:25;;50270:31;;:35;50260:46;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;50260:46:4;;;;50240:66;;50316:47;50326:6;50334;50342:4;:11;50355:4;50361:1;50316:9;:47::i;:::-;;50381:43;50391:15;50398:7;50391:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;50391:15:4;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;50391:15:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;50391:15:4;;;;;;;;;;;;;;;;50408:4;50414:9;50381;:43::i;:::-;50373:51;;50441:5;50434:12;;;;;;;;;;48856:1597;;;;;:::o;29559:454::-;29678:11;11886:1;11862:26;;11870:3;;;;;;;;;;;11862:26;;;11861:64;;;;11923:1;11894:25;11914:3;;;;;;;;;;;11894:11;:25::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;:35::i;:::-;;11857:130;12021:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12021:16:4;;;;;;;;;;;;;;;;12000:37;;12008:8;;;;;;;;;;;12000:37;;;11996:106;;12074:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12074:16:4;;;;;;;;;;;;;;;;12053:8;;:38;;;;;;;;;;;;;;;;;;11996:106;29701:10;29714:8;;;;;;;;;;;:17;;;29732:11;29745:9;29714:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;29714:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29714:41:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29714:41:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;29714:41:4;;;;;;;;;;;;;;;;29701:54;;29801:9;29787:11;:23;29777:7;:33;29769:5;:41;29765:107;;;29833:1;29826:8;;;;;;;29765:107;29881:17;29901:14;29909:5;29901:7;:14::i;:::-;29881:34;;29932:8;;;;;;;;;;;:28;;;29967:5;29974:1;29977:11;29990:4;29996:9;29932:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;29932:74:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;29932:74:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29932:74:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29932:74:4;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;29932:74:4;;;;;;;;;;;;;;;;29925:81;;;;12111:1;29559:454;;;;;:::o;12805:125::-;12910:13;12886:21;:37;;;;;;;;;;;;:::i;:::-;;12805:125;:::o;55234:982::-;55326:13;55341:25;55772:8;55790:12;55853:4;55847:11;55884:5;55878:4;55871:19;55925:2;55920;55914:4;55910:13;55903:25;55963:2;55958;55952:4;55948:13;55941:25;56001:2;55996;55990:4;55986:13;55979:25;56058:2;56052:4;56047:3;56041:4;56038:1;56035;56029:4;56024:37;56017:44;;56167:4;56161:11;56153:19;;55821:361;56199:3;56204:4;56191:18;;;;;;55234:982;;;;;;;:::o;44670:365::-;44731:26;44769:19;:17;:19::i;:::-;44798:24;;:::i;:::-;44832:22;44844:3;44849:4;44832:11;:22::i;:::-;44864:16;:3;:14;:16::i;:::-;44895:6;44904:1;44895:10;;44890:88;44911:4;:11;44907:1;:15;44890:88;;;44943:24;44959:4;44964:1;44959:7;;;;;;;;;;;;;;44943:3;:15;;:24;;;;:::i;:::-;44924:3;;;;;;;44890:88;;;;44987:17;:3;:15;:17::i;:::-;45021:3;:7;;;45014:14;;;44670:365;;;:::o;57901:170::-;57995:4;57989:11;58049:4;58042:5;58038:16;58028:8;58022:4;58013:42;57963:102;:::o;4277:434::-;4351:13;4367:9;4351:25;;4407:1;4401:2;4390:8;:13;;;;;;:18;4386:81;;4453:2;4442:8;:13;;;;;;4436:2;:20;4424:32;;;;4386:81;4492:8;4476:4;:13;;:24;;;;;4588:4;4582:11;4619:3;4613:4;4606:17;4648:1;4643:3;4636:14;4685:8;4680:3;4676:18;4670:4;4663:32;4557:148;;;;:::o;10510:128::-;10581:50;10608:4;8666:1;10581:26;:50::i;:::-;10510:128;:::o;10125:178::-;10218:49;10229:4;8617:1;10253:6;:13;10218:10;:49::i;:::-;10277:19;10289:6;10277:4;:11;;:19;;;;:::i;:::-;;10125:178;;:::o;10774:136::-;10846:57;10873:4;8828:1;10846:26;:57::i;:::-;10774:136;:::o;9564:145::-;9664:38;9698:2;9693:1;9683:6;:11;;;;9682:18;9664:4;:11;;:38;;;;:::i;:::-;9564:145;;:::o;8836:722::-;8947:2;8937:6;:12;8933:619;;8965:42;8999:6;8994:1;8984:6;:11;;;;8983:22;;;8965:4;:11;;:42;;;;:::i;:::-;8933:619;;;9038:4;9028:6;:14;9024:528;;9058:38;9092:2;9087:1;9077:6;:11;;;;9076:18;9058:4;:11;;:38;;;;:::i;:::-;9110:25;9125:6;9133:1;9110:4;:14;;:25;;;;;:::i;:::-;;9024:528;;;9166:6;9156;:16;9152:400;;9188:38;9222:2;9217:1;9207:6;:11;;;;9206:18;9188:4;:11;;:38;;;;:::i;:::-;9240:25;9255:6;9263:1;9240:4;:14;;:25;;;;;:::i;:::-;;9152:400;;;9296:10;9286:6;:20;9282:270;;9322:38;9356:2;9351:1;9341:6;:11;;;;9340:18;9322:4;:11;;:38;;;;:::i;:::-;9374:25;9389:6;9397:1;9374:4;:14;;:25;;;;;:::i;:::-;;9282:270;;;9430:18;9420:6;:28;9416:136;;9464:38;9498:2;9493:1;9483:6;:11;;;;9482:18;9464:4;:11;;:38;;;;:::i;:::-;9516:25;9531:6;9539:1;9516:4;:14;;:25;;;;;:::i;:::-;;9416:136;9282:270;9152:400;9024:528;8933:619;8836:722;;;:::o;5329:1213::-;5408:21;;:::i;:::-;5478:4;:13;;;5460:4;:8;;;:15;5445:5;:12;:30;:46;5441:127;;;5507:50;5514:4;5555:1;5520:32;5524:4;:13;;;5539:5;:12;5520:3;:32::i;:::-;:36;5507:6;:50::i;:::-;5441:127;5577:9;5596:8;5614;5625:5;:12;5614:23;;5690:4;5684:11;5765:6;5759:13;5852:2;5843:6;5835;5831:19;5827:28;5819:36;;5975:5;5969:12;5961:6;5957:25;5949:6;5942:41;6038:2;6031:5;6027:14;6020:21;;5656:395;;6060:206;6073:2;6066:3;:9;6060:206;;6190:3;6184:10;6178:4;6171:24;6230:2;6222:10;;;;6253:2;6246:9;;;;6084:2;6077:9;;;;6060:206;;;6275:9;6307:1;6300:3;6295:2;:8;6287:3;:17;:21;6275:33;;6400:4;6396:9;6390:3;6384:10;6380:26;6452:4;6445;6439:11;6435:22;6496:7;6486:8;6483:21;6477:4;6470:35;6351:164;;6531:4;6524:11;;;;;;5329:1213;;;;:::o;6826:575::-;6925:4;:13;;;6921:1;6903:4;:8;;;:15;:19;:35;6899:97;;;6954:31;6961:4;6983:1;6967:4;:13;;;:17;6954:6;:31::i;:::-;6899:97;7048:4;7042:11;7123:6;7117:13;7214:2;7205:6;7197;7193:19;7189:28;7312:5;7306:4;7298:20;7358:1;7350:6;7346:14;7338:6;7331:30;7014:381;;;;;:::o;7685:735::-;7770:21;;:::i;:::-;7832:4;:13;;;7814:4;:8;;;:15;7807:4;:22;:38;7803:111;;;7861:42;7868:4;7901:1;7874:24;7878:4;:13;;;7893:4;7874:3;:24::i;:::-;:28;7861:6;:42::i;:::-;7803:111;7923:9;7949:1;7942:4;7935:3;:11;:15;7923:27;;8003:4;7997:11;8078:6;8072:13;8169:4;8160:6;8152;8148:19;8144:30;8306:5;8298:4;8294:9;8287:4;8281:11;8277:27;8274:38;8268:4;8261:52;8353:4;8345:6;8341:17;8333:6;8326:33;7969:424;;;8409:4;8402:11;;;7685:735;;;;;:::o;4896:146::-;4949:9;4979:2;4974;:7;4970:47;;;5004:2;4997:9;;;;4970:47;5033:2;5026:9;;4896:146;;;;;:::o;4717:173::-;4792:19;4814:4;:8;;;4792:30;;4832:21;4837:4;4843:9;4832:4;:21::i;:::-;4863:20;4870:4;4876:6;4863;:20::i;:::-;;4717:173;;;:::o;115:1589:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "import './Ownable.sol';\nimport './Betting.sol';\nimport './usingPseudoRandomNumber.sol';\n\n\npragma solidity 0.5.12;\n\ncontract CoinFlip is Ownable, Betting, usingPseudoRandomNumber {\n\n    event ContractFunded(address funder, uint amount);\n\n    /* function bet(uint _amount) public payable\n        costs(0.01 ether)\n        setBettingLimit()\n        amountSentMustMatch(_amount)\n        mustHaveRequiredFunds(msg.sender, _amount)\n        mustHaveRequiredFunds(address(this), _amount)\n    {\n        bool _betWon;\n        uint rand = random();\n\n        if (rand == 1) {\n            msg.sender.transfer(_amount * 2);\n            _betWon = true;\n        } else {\n            _betWon = false;\n        }\n\n        emit BetPlaced(msg.sender, _amount, _betWon);\n    } */\n\n    function fundContract() public payable mustHaveRequiredFunds(msg.sender, msg.value) {\n        emit ContractFunded(msg.sender, msg.value);\n    }\n\n    function withdraw(uint _amount) public onlyOwner mustHaveRequiredFunds(address(this), _amount) {\n        assert(msg.sender == owner);\n        uint contractBalanceBefore = address(this).balance;\n        owner.transfer(_amount);\n        assert(address(this).balance == contractBalanceBefore - _amount);\n    }\n\n    function withdrawAll() public onlyOwner {\n        assert(msg.sender == owner);\n        uint withdrawalAmount = address(this).balance;\n        owner.transfer(withdrawalAmount);\n        assert(address(this).balance == 0);\n    }\n\n    function getContract() public view returns (address, uint) {\n        return (address(this), address(this).balance);\n    }\n\n    function getOwner() public view returns (address, uint) {\n        return (address(owner), address(owner).balance);\n    }\n}\n",
  "sourcePath": "/Users/Sant/Desktop/code/projects/blockchain/ivanontechacademy/coinflip/contracts/CoinFlip.sol",
  "ast": {
    "absolutePath": "/Users/Sant/Desktop/code/projects/blockchain/ivanontechacademy/coinflip/contracts/CoinFlip.sol",
    "exportedSymbols": {
      "CoinFlip": [
        401
      ]
    },
    "id": 402,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/Users/Sant/Desktop/code/projects/blockchain/ivanontechacademy/coinflip/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 254,
        "nodeType": "ImportDirective",
        "scope": 402,
        "sourceUnit": 485,
        "src": "0:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/Sant/Desktop/code/projects/blockchain/ivanontechacademy/coinflip/contracts/Betting.sol",
        "file": "./Betting.sol",
        "id": 255,
        "nodeType": "ImportDirective",
        "scope": 402,
        "sourceUnit": 253,
        "src": "24:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/Sant/Desktop/code/projects/blockchain/ivanontechacademy/coinflip/contracts/usingPseudoRandomNumber.sol",
        "file": "./usingPseudoRandomNumber.sol",
        "id": 256,
        "nodeType": "ImportDirective",
        "scope": 402,
        "sourceUnit": 6839,
        "src": "48:39:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 257,
        "literals": [
          "solidity",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "90:23:1"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 258,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 484,
              "src": "136:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$484",
                "typeString": "contract Ownable"
              }
            },
            "id": 259,
            "nodeType": "InheritanceSpecifier",
            "src": "136:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 260,
              "name": "Betting",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 252,
              "src": "145:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Betting_$252",
                "typeString": "contract Betting"
              }
            },
            "id": 261,
            "nodeType": "InheritanceSpecifier",
            "src": "145:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 262,
              "name": "usingPseudoRandomNumber",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6838,
              "src": "154:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingPseudoRandomNumber_$6838",
                "typeString": "contract usingPseudoRandomNumber"
              }
            },
            "id": 263,
            "nodeType": "InheritanceSpecifier",
            "src": "154:23:1"
          }
        ],
        "contractDependencies": [
          252,
          484,
          6780,
          6825,
          6838
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 401,
        "linearizedBaseContracts": [
          401,
          6838,
          252,
          6780,
          6825,
          484
        ],
        "name": "CoinFlip",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 269,
            "name": "ContractFunded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "indexed": false,
                  "name": "funder",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "206:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "206:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 267,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "222:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 266,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "222:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "205:29:1"
            },
            "src": "185:50:1"
          },
          {
            "body": {
              "id": 285,
              "nodeType": "Block",
              "src": "847:59:1",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 279,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6853,
                          "src": "877:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "877:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 281,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6853,
                          "src": "889:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "889:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 278,
                      "name": "ContractFunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 269,
                      "src": "862:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "862:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 284,
                  "nodeType": "EmitStatement",
                  "src": "857:42:1"
                }
              ]
            },
            "documentation": null,
            "id": 286,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 272,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6853,
                      "src": "824:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "824:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 274,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6853,
                      "src": "836:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "836:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 276,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 271,
                  "name": "mustHaveRequiredFunds",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6824,
                  "src": "802:21:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_uint256_$",
                    "typeString": "modifier (address,uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "802:44:1"
              }
            ],
            "name": "fundContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "784:2:1"
            },
            "returnParameters": {
              "id": 277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "847:0:1"
            },
            "scope": 401,
            "src": "763:143:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 330,
              "nodeType": "Block",
              "src": "1007:211:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 300,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6853,
                            "src": "1024:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1024:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 302,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 442,
                          "src": "1038:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1024:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 299,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6842,
                      "src": "1017:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1017:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "1017:27:1"
                },
                {
                  "assignments": [
                    307
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 307,
                      "name": "contractBalanceBefore",
                      "nodeType": "VariableDeclaration",
                      "scope": 330,
                      "src": "1054:26:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 306,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1054:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 312,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 309,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6887,
                          "src": "1091:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CoinFlip_$401",
                            "typeString": "contract CoinFlip"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CoinFlip_$401",
                            "typeString": "contract CoinFlip"
                          }
                        ],
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1083:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1083:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1083:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1054:50:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 316,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "1129:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 313,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 442,
                        "src": "1114:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1114:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1114:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "1114:23:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 321,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6887,
                                "src": "1162:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CoinFlip_$401",
                                  "typeString": "contract CoinFlip"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CoinFlip_$401",
                                  "typeString": "contract CoinFlip"
                                }
                              ],
                              "id": 320,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1154:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1154:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1154:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 324,
                            "name": "contractBalanceBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 307,
                            "src": "1179:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 325,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "1203:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1179:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1154:56:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 319,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6842,
                      "src": "1147:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1147:64:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "1147:64:1"
                }
              ]
            },
            "documentation": null,
            "id": 331,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 291,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 290,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 463,
                  "src": "951:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "951:9:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 294,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6887,
                        "src": "991:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CoinFlip_$401",
                          "typeString": "contract CoinFlip"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CoinFlip_$401",
                          "typeString": "contract CoinFlip"
                        }
                      ],
                      "id": 293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "983:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "983:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 296,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 288,
                    "src": "998:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 297,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 292,
                  "name": "mustHaveRequiredFunds",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6824,
                  "src": "961:21:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_uint256_$",
                    "typeString": "modifier (address,uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "961:45:1"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 288,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 331,
                  "src": "930:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "930:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "929:14:1"
            },
            "returnParameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1007:0:1"
            },
            "scope": 401,
            "src": "912:306:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 365,
              "nodeType": "Block",
              "src": "1264:185:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 337,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6853,
                            "src": "1281:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1281:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 339,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 442,
                          "src": "1295:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1281:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 336,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6842,
                      "src": "1274:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1274:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "1274:27:1"
                },
                {
                  "assignments": [
                    344
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 344,
                      "name": "withdrawalAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 365,
                      "src": "1311:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 343,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1311:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 349,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 346,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6887,
                          "src": "1343:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CoinFlip_$401",
                            "typeString": "contract CoinFlip"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CoinFlip_$401",
                            "typeString": "contract CoinFlip"
                          }
                        ],
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1335:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1335:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1335:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1311:45:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 353,
                        "name": "withdrawalAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "1381:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 350,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 442,
                        "src": "1366:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1366:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1366:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 355,
                  "nodeType": "ExpressionStatement",
                  "src": "1366:32:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 358,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6887,
                                "src": "1423:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CoinFlip_$401",
                                  "typeString": "contract CoinFlip"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CoinFlip_$401",
                                  "typeString": "contract CoinFlip"
                                }
                              ],
                              "id": 357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1415:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1415:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1415:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1440:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1415:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 356,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6842,
                      "src": "1408:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1408:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 364,
                  "nodeType": "ExpressionStatement",
                  "src": "1408:34:1"
                }
              ]
            },
            "documentation": null,
            "id": 366,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 334,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 333,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 463,
                  "src": "1254:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1254:9:1"
              }
            ],
            "name": "withdrawAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1244:2:1"
            },
            "returnParameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1264:0:1"
            },
            "scope": 401,
            "src": "1224:225:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "1514:62:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 374,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6887,
                            "src": "1540:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CoinFlip_$401",
                              "typeString": "contract CoinFlip"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CoinFlip_$401",
                              "typeString": "contract CoinFlip"
                            }
                          ],
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1532:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1532:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 377,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6887,
                              "src": "1555:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CoinFlip_$401",
                                "typeString": "contract CoinFlip"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CoinFlip_$401",
                                "typeString": "contract CoinFlip"
                              }
                            ],
                            "id": 376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1547:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1547:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1547:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 380,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1531:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256)"
                    }
                  },
                  "functionReturnParameters": 372,
                  "id": 381,
                  "nodeType": "Return",
                  "src": "1524:45:1"
                }
              ]
            },
            "documentation": null,
            "id": 383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1475:2:1"
            },
            "returnParameters": {
              "id": 372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 369,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "1499:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 371,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "1508:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 370,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1508:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1498:15:1"
            },
            "scope": 401,
            "src": "1455:121:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 399,
              "nodeType": "Block",
              "src": "1638:64:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 391,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 442,
                            "src": "1664:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1656:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1656:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 394,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 442,
                              "src": "1680:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1672:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1672:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1672:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 397,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1655:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_uint256_$",
                      "typeString": "tuple(address payable,uint256)"
                    }
                  },
                  "functionReturnParameters": 389,
                  "id": 398,
                  "nodeType": "Return",
                  "src": "1648:47:1"
                }
              ]
            },
            "documentation": null,
            "id": 400,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1599:2:1"
            },
            "returnParameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 386,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "1623:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 385,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1623:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 388,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "1632:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1632:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1622:15:1"
            },
            "scope": 401,
            "src": "1582:120:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 402,
        "src": "115:1589:1"
      }
    ],
    "src": "0:1705:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/Sant/Desktop/code/projects/blockchain/ivanontechacademy/coinflip/contracts/CoinFlip.sol",
    "exportedSymbols": {
      "CoinFlip": [
        401
      ]
    },
    "id": 402,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/Users/Sant/Desktop/code/projects/blockchain/ivanontechacademy/coinflip/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 254,
        "nodeType": "ImportDirective",
        "scope": 402,
        "sourceUnit": 485,
        "src": "0:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/Sant/Desktop/code/projects/blockchain/ivanontechacademy/coinflip/contracts/Betting.sol",
        "file": "./Betting.sol",
        "id": 255,
        "nodeType": "ImportDirective",
        "scope": 402,
        "sourceUnit": 253,
        "src": "24:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/Sant/Desktop/code/projects/blockchain/ivanontechacademy/coinflip/contracts/usingPseudoRandomNumber.sol",
        "file": "./usingPseudoRandomNumber.sol",
        "id": 256,
        "nodeType": "ImportDirective",
        "scope": 402,
        "sourceUnit": 6839,
        "src": "48:39:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 257,
        "literals": [
          "solidity",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "90:23:1"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 258,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 484,
              "src": "136:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$484",
                "typeString": "contract Ownable"
              }
            },
            "id": 259,
            "nodeType": "InheritanceSpecifier",
            "src": "136:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 260,
              "name": "Betting",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 252,
              "src": "145:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Betting_$252",
                "typeString": "contract Betting"
              }
            },
            "id": 261,
            "nodeType": "InheritanceSpecifier",
            "src": "145:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 262,
              "name": "usingPseudoRandomNumber",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6838,
              "src": "154:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingPseudoRandomNumber_$6838",
                "typeString": "contract usingPseudoRandomNumber"
              }
            },
            "id": 263,
            "nodeType": "InheritanceSpecifier",
            "src": "154:23:1"
          }
        ],
        "contractDependencies": [
          252,
          484,
          6780,
          6825,
          6838
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 401,
        "linearizedBaseContracts": [
          401,
          6838,
          252,
          6780,
          6825,
          484
        ],
        "name": "CoinFlip",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 269,
            "name": "ContractFunded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "indexed": false,
                  "name": "funder",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "206:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "206:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 267,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "222:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 266,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "222:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "205:29:1"
            },
            "src": "185:50:1"
          },
          {
            "body": {
              "id": 285,
              "nodeType": "Block",
              "src": "847:59:1",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 279,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6853,
                          "src": "877:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "877:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 281,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6853,
                          "src": "889:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "889:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 278,
                      "name": "ContractFunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 269,
                      "src": "862:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "862:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 284,
                  "nodeType": "EmitStatement",
                  "src": "857:42:1"
                }
              ]
            },
            "documentation": null,
            "id": 286,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 272,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6853,
                      "src": "824:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "824:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 274,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6853,
                      "src": "836:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "836:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 276,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 271,
                  "name": "mustHaveRequiredFunds",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6824,
                  "src": "802:21:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_uint256_$",
                    "typeString": "modifier (address,uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "802:44:1"
              }
            ],
            "name": "fundContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "784:2:1"
            },
            "returnParameters": {
              "id": 277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "847:0:1"
            },
            "scope": 401,
            "src": "763:143:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 330,
              "nodeType": "Block",
              "src": "1007:211:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 300,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6853,
                            "src": "1024:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1024:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 302,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 442,
                          "src": "1038:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1024:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 299,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6842,
                      "src": "1017:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1017:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "1017:27:1"
                },
                {
                  "assignments": [
                    307
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 307,
                      "name": "contractBalanceBefore",
                      "nodeType": "VariableDeclaration",
                      "scope": 330,
                      "src": "1054:26:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 306,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1054:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 312,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 309,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6887,
                          "src": "1091:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CoinFlip_$401",
                            "typeString": "contract CoinFlip"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CoinFlip_$401",
                            "typeString": "contract CoinFlip"
                          }
                        ],
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1083:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1083:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1083:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1054:50:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 316,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "1129:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 313,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 442,
                        "src": "1114:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1114:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1114:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "1114:23:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 321,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6887,
                                "src": "1162:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CoinFlip_$401",
                                  "typeString": "contract CoinFlip"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CoinFlip_$401",
                                  "typeString": "contract CoinFlip"
                                }
                              ],
                              "id": 320,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1154:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1154:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1154:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 324,
                            "name": "contractBalanceBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 307,
                            "src": "1179:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 325,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "1203:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1179:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1154:56:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 319,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6842,
                      "src": "1147:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1147:64:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "1147:64:1"
                }
              ]
            },
            "documentation": null,
            "id": 331,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 291,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 290,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 463,
                  "src": "951:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "951:9:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 294,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6887,
                        "src": "991:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CoinFlip_$401",
                          "typeString": "contract CoinFlip"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CoinFlip_$401",
                          "typeString": "contract CoinFlip"
                        }
                      ],
                      "id": 293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "983:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "983:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 296,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 288,
                    "src": "998:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 297,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 292,
                  "name": "mustHaveRequiredFunds",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6824,
                  "src": "961:21:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_uint256_$",
                    "typeString": "modifier (address,uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "961:45:1"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 288,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 331,
                  "src": "930:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "930:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "929:14:1"
            },
            "returnParameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1007:0:1"
            },
            "scope": 401,
            "src": "912:306:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 365,
              "nodeType": "Block",
              "src": "1264:185:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 337,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6853,
                            "src": "1281:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1281:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 339,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 442,
                          "src": "1295:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1281:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 336,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6842,
                      "src": "1274:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1274:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "1274:27:1"
                },
                {
                  "assignments": [
                    344
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 344,
                      "name": "withdrawalAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 365,
                      "src": "1311:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 343,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1311:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 349,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 346,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6887,
                          "src": "1343:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CoinFlip_$401",
                            "typeString": "contract CoinFlip"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CoinFlip_$401",
                            "typeString": "contract CoinFlip"
                          }
                        ],
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1335:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1335:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1335:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1311:45:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 353,
                        "name": "withdrawalAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "1381:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 350,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 442,
                        "src": "1366:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1366:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1366:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 355,
                  "nodeType": "ExpressionStatement",
                  "src": "1366:32:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 358,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6887,
                                "src": "1423:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CoinFlip_$401",
                                  "typeString": "contract CoinFlip"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CoinFlip_$401",
                                  "typeString": "contract CoinFlip"
                                }
                              ],
                              "id": 357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1415:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1415:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1415:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1440:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1415:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 356,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6842,
                      "src": "1408:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1408:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 364,
                  "nodeType": "ExpressionStatement",
                  "src": "1408:34:1"
                }
              ]
            },
            "documentation": null,
            "id": 366,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 334,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 333,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 463,
                  "src": "1254:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1254:9:1"
              }
            ],
            "name": "withdrawAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1244:2:1"
            },
            "returnParameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1264:0:1"
            },
            "scope": 401,
            "src": "1224:225:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "1514:62:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 374,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6887,
                            "src": "1540:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CoinFlip_$401",
                              "typeString": "contract CoinFlip"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CoinFlip_$401",
                              "typeString": "contract CoinFlip"
                            }
                          ],
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1532:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1532:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 377,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6887,
                              "src": "1555:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CoinFlip_$401",
                                "typeString": "contract CoinFlip"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CoinFlip_$401",
                                "typeString": "contract CoinFlip"
                              }
                            ],
                            "id": 376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1547:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1547:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1547:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 380,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1531:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256)"
                    }
                  },
                  "functionReturnParameters": 372,
                  "id": 381,
                  "nodeType": "Return",
                  "src": "1524:45:1"
                }
              ]
            },
            "documentation": null,
            "id": 383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1475:2:1"
            },
            "returnParameters": {
              "id": 372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 369,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "1499:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 371,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "1508:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 370,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1508:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1498:15:1"
            },
            "scope": 401,
            "src": "1455:121:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 399,
              "nodeType": "Block",
              "src": "1638:64:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 391,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 442,
                            "src": "1664:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1656:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1656:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 394,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 442,
                              "src": "1680:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1672:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1672:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1672:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 397,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1655:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_uint256_$",
                      "typeString": "tuple(address payable,uint256)"
                    }
                  },
                  "functionReturnParameters": 389,
                  "id": 398,
                  "nodeType": "Return",
                  "src": "1648:47:1"
                }
              ]
            },
            "documentation": null,
            "id": 400,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1599:2:1"
            },
            "returnParameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 386,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "1623:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 385,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1623:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 388,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "1632:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1632:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1622:15:1"
            },
            "scope": 401,
            "src": "1582:120:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 402,
        "src": "115:1589:1"
      }
    ],
    "src": "0:1705:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0xf8e99859e696debf4ef1752d671f759f7f63a1116efe995d789edfb3849c3549": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "gambler",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "betWon",
              "type": "bool"
            }
          ],
          "name": "BetPlaced",
          "type": "event",
          "signature": "0xf8e99859e696debf4ef1752d671f759f7f63a1116efe995d789edfb3849c3549"
        },
        "0x0939f6f4877faf071412e527bc4c6d0bd65ad077e52b57334f7765265647a7f1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "funder",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "ContractFunded",
          "type": "event",
          "signature": "0x0939f6f4877faf071412e527bc4c6d0bd65ad077e52b57334f7765265647a7f1"
        },
        "0x81816b50aae098d98a0f7930cfef379261913e37ed33759052b5eff95fbb8d5f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "queryId",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ],
          "name": "BetFailed",
          "type": "event",
          "signature": "0x81816b50aae098d98a0f7930cfef379261913e37ed33759052b5eff95fbb8d5f"
        },
        "0xb58ed8de2ff975b88fd2a22247a1b9f08d84aa1c2db23abf16d67d9f31c1225b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "queryId",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "BetLost",
          "type": "event",
          "signature": "0xb58ed8de2ff975b88fd2a22247a1b9f08d84aa1c2db23abf16d67d9f31c1225b"
        },
        "0xcd5f79909b53eb4c55b0a2d7004914519bad1e3ade1b3dae6005d528d83da31e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "queryId",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "BetPlaced",
          "type": "event",
          "signature": "0xcd5f79909b53eb4c55b0a2d7004914519bad1e3ade1b3dae6005d528d83da31e"
        },
        "0xc7467b234ebec1c00b2a9c6f62968fc5e3f5d9a7ea29b116695c62b455674eff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "queryId",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "BetWon",
          "type": "event",
          "signature": "0xc7467b234ebec1c00b2a9c6f62968fc5e3f5d9a7ea29b116695c62b455674eff"
        },
        "0xc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c47389": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "name": "LogNewProvableQuery",
          "type": "event",
          "signature": "0xc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c47389"
        },
        "0xf3421c93854709397d0d2db783688451d8b0cce5121d0580b704b45a32e9240d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "queryId",
              "type": "bytes32"
            }
          ],
          "name": "BetFinished",
          "type": "event",
          "signature": "0xf3421c93854709397d0d2db783688451d8b0cce5121d0580b704b45a32e9240d"
        }
      },
      "links": {},
      "address": "0x572B100fFcc7627a6f28165F5c36aAaFEEd834C5",
      "transactionHash": "0x9235d73ece65f2712da9022a65cbd84a96a11f4d15d2086aefd717a2c9cf31fb"
    },
    "5777": {
      "events": {
        "0xf8e99859e696debf4ef1752d671f759f7f63a1116efe995d789edfb3849c3549": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "gambler",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "betWon",
              "type": "bool"
            }
          ],
          "name": "BetPlaced",
          "type": "event",
          "signature": "0xf8e99859e696debf4ef1752d671f759f7f63a1116efe995d789edfb3849c3549"
        },
        "0x0939f6f4877faf071412e527bc4c6d0bd65ad077e52b57334f7765265647a7f1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "funder",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "ContractFunded",
          "type": "event",
          "signature": "0x0939f6f4877faf071412e527bc4c6d0bd65ad077e52b57334f7765265647a7f1"
        }
      },
      "links": {},
      "address": "0x0FAb16B10062202fF07c4Fffc7a03c2fF060a619",
      "transactionHash": "0xef246684bff02f74bdc75776ca5f124d6628bc7d9b251ac398c14ee34d337305"
    }
  },
  "schemaVersion": "3.0.19",
  "updatedAt": "2020-01-31T03:40:14.572Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "__callback(bytes32,string)": {
        "details": "The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}